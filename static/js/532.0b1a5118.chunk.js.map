{"version":3,"file":"static/js/532.0b1a5118.chunk.js","mappings":"uLACA,QAA0B,gCAA1B,EAA4E,wCAA5E,EAA4H,8BAA5H,EAAwK,oCAAxK,EAAqN,+BAArN,EAA2P,6BAA3P,EAAmS,iC,aCWnS,MA+BA,EA/BgDA,IAAsB,IAArB,YAAEC,GAAaD,EAC5D,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAEJ,EAAYM,QAC1CD,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAmBC,SAAEJ,EAAYO,cAC9CP,EAAYQ,QACTH,EAAAA,EAAAA,KAAA,OAAKI,IAAKT,EAAYQ,MAAOE,IAAI,mBAErCL,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAACT,UAAWC,EAAgBC,SACrCJ,EAAYY,cAGrBX,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OACII,IACIT,EAAYa,KAAKC,UACXd,EAAYa,KAAKC,UACjBC,EAEVL,IAAI,YAERL,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAYa,KAAKG,eAE1BX,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,EAAYiB,UAAUC,oBAE5B,EC0Bd,EAxDoBC,KAChB,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,KAChBC,GAAKC,EAAAA,EAAAA,OAEJC,EAASC,IAAcC,EAAAA,EAAAA,UAAmB,CAC7CC,GAAI,GACJrB,KAAM,GACNC,YAAa,GACbK,QAAS,GACTK,UAAW,CACPW,KAAM,IAAIC,KACVX,aAAc,IAElBL,KAAM,CACFG,SAAU,GACVF,UAAW,OAGZgB,EAAWC,IAAgBL,EAAAA,EAAAA,WAAkB,IAC7CM,EAAOC,IAAYP,EAAAA,EAAAA,UAAiB,IAwB3C,OAtBAQ,EAAAA,EAAAA,YAAU,KACaC,WACf,IACIJ,GAAa,GACb,MAAMK,GAAaC,EAAAA,EAAAA,IAAIf,EAAI,WAAW,GAADgB,OAAKlB,IACpCmB,QAAoBC,EAAAA,EAAAA,IAAOJ,GACjC,GAAIG,EAAYE,SAAU,CACtB,MAAMzC,EAAcuC,EAAYG,OAChCjB,EAAW,IACJzB,EACH2B,GAAIY,EAAYZ,IAExB,CACJ,CAAE,MACEM,EAAS,yKACb,CAAC,QACGF,GAAa,EACjB,GAEJY,EAAY,GACb,CAACvB,KAGAf,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAWE,SACrB0B,GACGzB,EAAAA,EAAAA,KAACuC,EAAAA,EAAO,IACRZ,GACA3B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOE,SAAE4B,KAExB3B,EAAAA,EAAAA,KAACwC,EAAc,CAAC7C,YAAawB,KAE/B,C","sources":["webpack://gym/./src/components/articleContent/ArticleContent.module.css?4933","components/articleContent/ArticleContent.tsx","pages/Article.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"article\":\"ArticleContent_article__rMsjM\",\"article_content\":\"ArticleContent_article_content__5LzIU\",\"title\":\"ArticleContent_title__Kn4PJ\",\"description\":\"ArticleContent_description__LPkHM\",\"author\":\"ArticleContent_author__tHO56\",\"info\":\"ArticleContent_info__WovHB\",\"markdown\":\"ArticleContent_markdown__6tO31\"};","import { FC } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport avaIcon from 'assets/icons/ava.png';\r\nimport { IArticle } from 'types/articles/articles';\r\n\r\nimport styles from './ArticleContent.module.css';\r\n\r\ninterface ArticleContentProps {\r\n    articleData: IArticle;\r\n}\r\n\r\nconst ArticleContent: FC<ArticleContentProps> = ({ articleData }) => {\r\n    return (\r\n        <div className={styles.article}>\r\n            <div className={styles.article_content}>\r\n                <h1 className={styles.title}>{articleData.name}</h1>\r\n                <p className={styles.description}>{articleData.description}</p>\r\n                {articleData.image && (\r\n                    <img src={articleData.image} alt=\"article_image\" />\r\n                )}\r\n                <ReactMarkdown className={styles.markdown}>\r\n                    {articleData.content}\r\n                </ReactMarkdown>\r\n            </div>\r\n            <div className={styles.author}>\r\n                <div className={styles.info}>\r\n                    <img\r\n                        src={\r\n                            articleData.user.avatarUrl\r\n                                ? articleData.user.avatarUrl\r\n                                : avaIcon\r\n                        }\r\n                        alt=\"avatar\"\r\n                    />\r\n                    <h4>{articleData.user.username}</h4>\r\n                </div>\r\n                <p>{articleData.createdAt.formatedDate}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ArticleContent;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { doc, getDoc, getFirestore } from 'firebase/firestore';\r\n\r\nimport Loading from 'components/common/loading/Loading';\r\nimport ArticleContent from 'components/articleContent/ArticleContent';\r\n\r\nimport { IArticle } from 'types/articles/articles';\r\n\r\nconst Article: FC = () => {\r\n    const { articleId } = useParams();\r\n    const db = getFirestore();\r\n\r\n    const [article, setArticle] = useState<IArticle>({\r\n        id: '',\r\n        name: '',\r\n        description: '',\r\n        content: '',\r\n        createdAt: {\r\n            date: new Date(),\r\n            formatedDate: '',\r\n        },\r\n        user: {\r\n            username: '',\r\n            avatarUrl: '',\r\n        },\r\n    });\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const getArticle = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const articleRef = doc(db, 'articles', `${articleId}`);\r\n                const articleSnap = await getDoc(articleRef);\r\n                if (articleSnap.exists()) {\r\n                    const articleData = articleSnap.data() as IArticle;\r\n                    setArticle({\r\n                        ...articleData,\r\n                        id: articleSnap.id,\r\n                    });\r\n                }\r\n            } catch {\r\n                setError('Такого документа не существует!');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        getArticle();\r\n    }, [articleId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : error ? (\r\n                <div className=\"error\">{error}</div>\r\n            ) : (\r\n                <ArticleContent articleData={article} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Article;\r\n"],"names":["_ref","articleData","_jsxs","className","styles","children","_jsx","name","description","image","src","alt","ReactMarkdown","content","user","avatarUrl","avaIcon","username","createdAt","formatedDate","Article","articleId","useParams","db","getFirestore","article","setArticle","useState","id","date","Date","isLoading","setIsLoading","error","setError","useEffect","async","articleRef","doc","concat","articleSnap","getDoc","exists","data","getArticle","Loading","ArticleContent"],"sourceRoot":""}