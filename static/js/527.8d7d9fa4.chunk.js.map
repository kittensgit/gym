{"version":3,"file":"static/js/527.8d7d9fa4.chunk.js","mappings":"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","sources":["webpack://gym/./src/components/workoutContent/exercise/set/Set.module.css?2403","components/workoutContent/exercise/set/Set.tsx","webpack://gym/./src/components/workoutContent/exercise/Exercise.module.css?e306","components/workoutContent/exercise/Exercise.tsx","webpack://gym/./src/components/workoutContent/workoutForm/WorkoutForm.module.css?baa3","components/workoutContent/workoutForm/WorkoutForm.tsx","webpack://gym/./src/components/workoutContent/WorkoutContent.module.css?56c0","components/workoutContent/WorkoutContent.tsx","pages/Workout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"workout_set\":\"Set_workout_set__vl-0A\"};","import { FC } from 'react';\r\n\r\nimport { ISet } from 'types/user/user';\r\n\r\nimport styles from './Set.module.css';\r\n\r\ninterface SetsProps {\r\n    set: ISet;\r\n}\r\n\r\nconst Sets: FC<SetsProps> = ({ set }) => {\r\n    return (\r\n        <div className={styles.workout_set}>\r\n            <p>\r\n                {set.countApproaches} × {set.countTimes}\r\n            </p>\r\n            <p>{set.weight} кг</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sets;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"workout_exercise\":\"Exercise_workout_exercise__v6cXD\",\"exercise_content\":\"Exercise_exercise_content__TNV-g\"};","import { FC } from 'react';\r\n\r\nimport { IExercise } from 'types/user/user';\r\n\r\nimport Set from './set/Set';\r\n\r\nimport styles from './Exercise.module.css';\r\n\r\ninterface ExercisesProps {\r\n    exercise: IExercise;\r\n}\r\n\r\nconst Exercises: FC<ExercisesProps> = ({ exercise }) => {\r\n    return (\r\n        <div className={styles.workout_exercise}>\r\n            <h4>{exercise.exerciseName}</h4>\r\n            <div className={styles.exercise_content}>\r\n                {exercise.sets.map((itemSets, indexSets) => (\r\n                    <Set key={indexSets} set={itemSets} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Exercises;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_plus\":\"WorkoutForm_btn_plus__jAJRx\",\"btn\":\"WorkoutForm_btn__-gEC+\",\"workout_form\":\"WorkoutForm_workout_form__QDyeq\",\"workout_inputs\":\"WorkoutForm_workout_inputs__J5moa\",\"inputs_date\":\"WorkoutForm_inputs_date__Go9ki\",\"exercise_form\":\"WorkoutForm_exercise_form__NMrjK\",\"exercise_form_content\":\"WorkoutForm_exercise_form_content__3Np6H\",\"set_wrapper\":\"WorkoutForm_set_wrapper__zx6Cx\",\"set_form\":\"WorkoutForm_set_form__BkZjl\",\"set_inputs\":\"WorkoutForm_set_inputs__X+3tC\",\"done\":\"WorkoutForm_done__XVARz\"};","import { FC, useState } from 'react';\r\n\r\nimport { IExercise, ISet, IWorkout } from 'types/user/user';\r\n\r\nimport plusIcon from 'assets/icons/plus.png';\r\nimport doneIcon from 'assets/icons/check.png';\r\n\r\nimport Exercises from '../exercise/Exercise';\r\nimport Sets from '../exercise/set/Set';\r\n\r\nimport styles from './WorkoutForm.module.css';\r\n\r\ninterface WorkoutFormProps {\r\n    dateWorkout: IWorkout['dateWorkout'];\r\n    workoutName: IWorkout['workoutName'];\r\n    handleChangeWorkoutDate: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    handleChangeWorkoutName: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    handleSaveWorkout: (exercises: IExercise[]) => void;\r\n}\r\n\r\nconst WorkoutForm: FC<WorkoutFormProps> = ({\r\n    dateWorkout,\r\n    workoutName,\r\n    handleChangeWorkoutDate,\r\n    handleChangeWorkoutName,\r\n    handleSaveWorkout,\r\n}) => {\r\n    const [exercises, setExercises] = useState<IExercise[]>([]);\r\n    const [sets, setSets] = useState<ISet[]>([]);\r\n\r\n    const [isAddExercise, setIsAddExercise] = useState<boolean>(false);\r\n    const [isAddSet, setIsAddSet] = useState<boolean>(false);\r\n\r\n    const [exerciseName, setExerciseName] = useState<string>('');\r\n\r\n    const [countApproaches, setCountApproaches] = useState<number>(1);\r\n    const [countTimes, setCountTimes] = useState<number>(1);\r\n    const [weight, setWeight] = useState<number>(1);\r\n\r\n    const handleChangeIsAddExercise = () => {\r\n        setIsAddExercise(!isAddExercise);\r\n    };\r\n    const handleChangeIsAddSet = () => {\r\n        setIsAddSet(!isAddSet);\r\n    };\r\n\r\n    const handleSaveExercises = () => {\r\n        handleChangeIsAddExercise();\r\n        const newExercise: IExercise = {\r\n            exerciseName,\r\n            sets: sets,\r\n        };\r\n        setExercises([newExercise, ...exercises]);\r\n        setExerciseName('');\r\n        setSets([]);\r\n    };\r\n\r\n    const handleSaveSet = () => {\r\n        handleChangeIsAddSet();\r\n        const newSet: ISet = {\r\n            countApproaches,\r\n            countTimes,\r\n            weight,\r\n        };\r\n        setSets([...sets, newSet]);\r\n        setCountApproaches(1);\r\n        setCountTimes(1);\r\n        setWeight(1);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.workout_form}>\r\n            <div className={styles.workout_inputs}>\r\n                <div className={styles.inputs_date}>\r\n                    <input\r\n                        value={dateWorkout.day}\r\n                        onChange={handleChangeWorkoutDate}\r\n                        type=\"number\"\r\n                        name=\"day\"\r\n                        placeholder=\"День\"\r\n                    />\r\n                    <input\r\n                        value={dateWorkout.month}\r\n                        onChange={handleChangeWorkoutDate}\r\n                        type=\"number\"\r\n                        name=\"month\"\r\n                        placeholder=\"Месяц\"\r\n                    />\r\n                    <input\r\n                        value={dateWorkout.year}\r\n                        onChange={handleChangeWorkoutDate}\r\n                        type=\"number\"\r\n                        name=\"year\"\r\n                        placeholder=\"Год\"\r\n                    />\r\n                </div>\r\n                <input\r\n                    value={workoutName}\r\n                    onChange={handleChangeWorkoutName}\r\n                    type=\"text\"\r\n                    placeholder=\"Введите название тренировки\"\r\n                />\r\n            </div>\r\n            {!isAddExercise ? (\r\n                <button\r\n                    onClick={handleChangeIsAddExercise}\r\n                    className={styles.btn_plus}\r\n                >\r\n                    <img src={plusIcon} alt=\"plus\" />\r\n                    Добавить упражнение\r\n                </button>\r\n            ) : (\r\n                <div className={styles.exercise_form}>\r\n                    <div className={styles.exercise_form_content}>\r\n                        <input\r\n                            value={exerciseName}\r\n                            onChange={(e) => setExerciseName(e.target.value)}\r\n                            type=\"text\"\r\n                            placeholder=\"Введите название упражнения\"\r\n                        />\r\n                        {!isAddSet ? (\r\n                            <div className={styles.set_wrapper}>\r\n                                {sets.map((itemSets, indexSets) => (\r\n                                    <Sets key={indexSets} set={itemSets} />\r\n                                ))}\r\n                                <button\r\n                                    onClick={handleChangeIsAddSet}\r\n                                    className={styles.btn_plus}\r\n                                >\r\n                                    <img src={plusIcon} alt=\"plus\" />\r\n                                    Добавить сет\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <div className={styles.set_form}>\r\n                                {sets.map((itemSets, indexSets) => (\r\n                                    <Sets key={indexSets} set={itemSets} />\r\n                                ))}\r\n                                <div className={styles.set_inputs}>\r\n                                    <input\r\n                                        value={countApproaches}\r\n                                        onChange={(e) =>\r\n                                            setCountApproaches(\r\n                                                parseInt(e.target.value, 10)\r\n                                            )\r\n                                        }\r\n                                        type=\"number\"\r\n                                        placeholder=\"Подходов\"\r\n                                    />\r\n                                    <span>×</span>\r\n                                    <input\r\n                                        value={countTimes}\r\n                                        onChange={(e) =>\r\n                                            setCountTimes(\r\n                                                parseInt(e.target.value, 10)\r\n                                            )\r\n                                        }\r\n                                        type=\"number\"\r\n                                        placeholder=\"Повторений\"\r\n                                    />\r\n                                    <input\r\n                                        value={weight}\r\n                                        onChange={(e) =>\r\n                                            setWeight(\r\n                                                parseInt(e.target.value, 10)\r\n                                            )\r\n                                        }\r\n                                        type=\"number\"\r\n                                        placeholder=\"Вес\"\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    className={styles.btn}\r\n                                    onClick={handleSaveSet}\r\n                                >\r\n                                    Применить\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <button\r\n                        className={styles.btn}\r\n                        onClick={handleSaveExercises}\r\n                    >\r\n                        Добавить упражнение\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {exercises.map((itemExercises, indexExercises) => (\r\n                <Exercises key={indexExercises} exercise={itemExercises} />\r\n            ))}\r\n            <button\r\n                onClick={() => handleSaveWorkout(exercises)}\r\n                className={styles.btn + ' ' + styles.done}\r\n            >\r\n                <img src={doneIcon} alt=\"done\" />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkoutForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"WorkoutContent_wrapper__rBlun\",\"btn_plus\":\"WorkoutContent_btn_plus__+ndUV\",\"btn\":\"WorkoutContent_btn__eg-q+\",\"workout\":\"WorkoutContent_workout__ZULt6\",\"workout_item\":\"WorkoutContent_workout_item__SxkJa\",\"workout_top\":\"WorkoutContent_workout_top__jZbGB\",\"delete\":\"WorkoutContent_delete__QYd4Y\",\"error\":\"WorkoutContent_error__M2Stx\",\"message\":\"WorkoutContent_message__zWv8E\"};","import { FC, useState } from 'react';\r\n\r\nimport Loading from 'components/common/loading/Loading';\r\n\r\nimport plusIcon from 'assets/icons/plus.png';\r\nimport deleteIcon from 'assets/icons/trash.png';\r\nimport emptyFile from 'assets/icons/empty.png';\r\n\r\nimport { IExercise, IWorkout } from 'types/user/user';\r\n\r\nimport WorkoutForm from './workoutForm/WorkoutForm';\r\nimport Exercise from './exercise/Exercise';\r\n\r\nimport styles from './WorkoutContent.module.css';\r\n\r\ninterface WorkoutContentProps {\r\n    workout: IWorkout[];\r\n    isAddWorkout: boolean;\r\n    isLoading: boolean;\r\n    handleChangeIsAddWorkout: () => void;\r\n    deleteWorkoutFromFirebase: (id: IWorkout['id']) => void;\r\n    addWorkoutToFirebase: (\r\n        workoutName: IWorkout['workoutName'],\r\n        dateWorkout: IWorkout['dateWorkout'],\r\n        exercises: IExercise[]\r\n    ) => void;\r\n}\r\n\r\nconst WorkoutContent: FC<WorkoutContentProps> = ({\r\n    workout,\r\n    isAddWorkout,\r\n    isLoading,\r\n    handleChangeIsAddWorkout,\r\n    deleteWorkoutFromFirebase,\r\n    addWorkoutToFirebase,\r\n}) => {\r\n    const [workoutName, setWorkoutName] = useState<IWorkout['workoutName']>('');\r\n    const [dateWorkout, setDateWorkout] = useState<IWorkout['dateWorkout']>({\r\n        day: 1,\r\n        month: 1,\r\n        year: 2024,\r\n    });\r\n\r\n    const [saveError, setSaveError] = useState<string | null>('');\r\n\r\n    const handleChangeWorkoutDate = (\r\n        e: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        const { name, value } = e.target;\r\n        setDateWorkout((prevFormData) => ({\r\n            ...prevFormData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleChangeWorkoutName = (\r\n        e: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        setWorkoutName(e.target.value);\r\n    };\r\n\r\n    const handleSaveWorkout = async (exercises: IExercise[]) => {\r\n        try {\r\n            handleChangeIsAddWorkout();\r\n            addWorkoutToFirebase(workoutName, dateWorkout, exercises);\r\n            setWorkoutName('');\r\n            setDateWorkout({\r\n                day: 1,\r\n                month: 1,\r\n                year: 2024,\r\n            });\r\n        } catch (error: any) {\r\n            if (error instanceof Error) {\r\n                setSaveError(error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleRemoveWorkout = async (id: IWorkout['id']) => {\r\n        deleteWorkoutFromFirebase(id);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {!isAddWorkout ? (\r\n                <button\r\n                    onClick={handleChangeIsAddWorkout}\r\n                    className={styles.btn_plus}\r\n                >\r\n                    <img src={plusIcon} alt=\"plus\" />\r\n                    Добавить тренировку\r\n                </button>\r\n            ) : (\r\n                <WorkoutForm\r\n                    workoutName={workoutName}\r\n                    dateWorkout={dateWorkout}\r\n                    handleChangeWorkoutDate={handleChangeWorkoutDate}\r\n                    handleSaveWorkout={handleSaveWorkout}\r\n                    handleChangeWorkoutName={handleChangeWorkoutName}\r\n                />\r\n            )}\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : saveError ? (\r\n                <p className={styles.error}>\r\n                    Произошла ошибка при добавлении тренировки: {saveError}\r\n                </p>\r\n            ) : workout.length ? (\r\n                <div className={styles.workout}>\r\n                    {workout.map((itemWorkout) => (\r\n                        <div\r\n                            key={itemWorkout.id}\r\n                            className={styles.workout_item}\r\n                        >\r\n                            <div className={styles.workout_top}>\r\n                                <h3>\r\n                                    <span>{itemWorkout.dateWorkout.day}/</span>\r\n                                    <span>\r\n                                        {itemWorkout.dateWorkout.month}/\r\n                                    </span>\r\n                                    <span>\r\n                                        {String(\r\n                                            itemWorkout.dateWorkout.year\r\n                                        ).slice(2)}\r\n                                    </span>{' '}\r\n                                    — {itemWorkout.workoutName}\r\n                                </h3>\r\n                                <button\r\n                                    onClick={() =>\r\n                                        handleRemoveWorkout(itemWorkout.id)\r\n                                    }\r\n                                    className={styles.delete}\r\n                                >\r\n                                    <img src={deleteIcon} alt=\"delete\" />\r\n                                </button>\r\n                            </div>\r\n                            {itemWorkout.exercises.map(\r\n                                (itemExercises, indexEsercises) => (\r\n                                    <Exercise\r\n                                        key={indexEsercises}\r\n                                        exercise={itemExercises}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p className={styles.message}>\r\n                    Тренировки еще не были добавлены\r\n                    <img src={emptyFile} alt=\"empty\" />\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkoutContent;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport {\r\n    addDoc,\r\n    collection,\r\n    deleteDoc,\r\n    doc,\r\n    getDocs,\r\n    getFirestore,\r\n} from 'firebase/firestore';\r\n\r\nimport WorkoutContent from 'components/workoutContent/WorkoutContent';\r\n\r\nimport { IExercise, IWorkout } from 'types/user/user';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst Workout: FC = () => {\r\n    const { id } = useAuth();\r\n    const db = getFirestore();\r\n    const workoutRef = collection(db, 'users', `${id}`, 'workout');\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n    const [workout, setWorkout] = useState<IWorkout[]>([]);\r\n\r\n    const [isAddWorkout, setIsAddWorkout] = useState<boolean>(false);\r\n\r\n    const handleChangeIsAddWorkout = () => {\r\n        setIsAddWorkout(!isAddWorkout);\r\n    };\r\n\r\n    const addWorkoutToFirebase = async (\r\n        workoutName: IWorkout['workoutName'],\r\n        dateWorkout: IWorkout['dateWorkout'],\r\n        exercises: IExercise[]\r\n    ) => {\r\n        await addDoc(workoutRef, {\r\n            workoutName,\r\n            dateWorkout,\r\n            exercises,\r\n        });\r\n    };\r\n\r\n    const getWorkoutData = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const data = await getDocs(workoutRef);\r\n            const filteredData: IWorkout[] = data.docs.map((doc) => {\r\n                const data = doc.data();\r\n                return {\r\n                    id: doc.id,\r\n                    workoutName: data.workoutName,\r\n                    dateWorkout: data.dateWorkout,\r\n                    exercises: data.exercises,\r\n                };\r\n            });\r\n            const sortedDataByDate = filteredData.sort((w1, w2) => {\r\n                const dateW1 = new Date(\r\n                    w1.dateWorkout.year,\r\n                    w1.dateWorkout.month - 1,\r\n                    w1.dateWorkout.day\r\n                );\r\n                const dateW2 = new Date(\r\n                    w2.dateWorkout.year,\r\n                    w2.dateWorkout.month - 1,\r\n                    w2.dateWorkout.day\r\n                );\r\n                return dateW2.getTime() - dateW1.getTime();\r\n            });\r\n\r\n            setWorkout(sortedDataByDate);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const deleteWorkoutFromFirebase = async (workoutId: IWorkout['id']) => {\r\n        try {\r\n            setIsLoading(true);\r\n            await deleteDoc(\r\n                doc(db, 'users', `${id}`, 'workout', `${workoutId}`)\r\n            );\r\n            await getWorkoutData();\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWorkoutData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isAddWorkout]);\r\n\r\n    return (\r\n        <div>\r\n            <WorkoutContent\r\n                workout={workout}\r\n                isAddWorkout={isAddWorkout}\r\n                isLoading={isLoading}\r\n                deleteWorkoutFromFirebase={deleteWorkoutFromFirebase}\r\n                handleChangeIsAddWorkout={handleChangeIsAddWorkout}\r\n                addWorkoutToFirebase={addWorkoutToFirebase}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Workout;\r\n"],"names":["_ref","set","_jsxs","className","styles","children","countApproaches","countTimes","weight","exercise","_jsx","exerciseName","sets","map","itemSets","indexSets","Set","dateWorkout","workoutName","handleChangeWorkoutDate","handleChangeWorkoutName","handleSaveWorkout","exercises","setExercises","useState","setSets","isAddExercise","setIsAddExercise","isAddSet","setIsAddSet","setExerciseName","setCountApproaches","setCountTimes","setWeight","handleChangeIsAddExercise","handleChangeIsAddSet","value","day","onChange","type","name","placeholder","month","year","e","target","Sets","parseInt","onClick","handleSaveSet","newSet","src","plusIcon","alt","handleSaveExercises","itemExercises","indexExercises","Exercises","workout","isAddWorkout","isLoading","handleChangeIsAddWorkout","deleteWorkoutFromFirebase","addWorkoutToFirebase","setWorkoutName","setDateWorkout","saveError","setSaveError","WorkoutForm","prevFormData","async","error","Error","message","Loading","length","itemWorkout","String","slice","id","handleRemoveWorkout","indexEsercises","Exercise","emptyFile","Workout","useAuth","db","getFirestore","workoutRef","collection","concat","setIsLoading","setWorkout","setIsAddWorkout","getWorkoutData","data","getDocs","sortedDataByDate","docs","doc","sort","w1","w2","dateW1","Date","getTime","useEffect","WorkoutContent","deleteDoc","workoutId","addDoc"],"sourceRoot":""}