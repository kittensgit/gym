{"version":3,"file":"static/js/213.883f8fe9.chunk.js","mappings":"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","sources":["helpers/formatDate.ts","webpack://gym/./src/components/createArticleContent/CreateArticleContent.module.css?f361","components/createArticleContent/CreateArticleContent.tsx","pages/CreateArticle.tsx"],"sourcesContent":["import { format, formatDistanceStrict } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\nexport const formatDate = (date: Date) => {\r\n    return format(date, 'd MMMM, yyyy', {\r\n        locale: ru,\r\n    });\r\n};\r\n\r\nexport const distanceDate = (date: Date) => {\r\n    return formatDistanceStrict(new Date(), date, {\r\n        locale: ru,\r\n    });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CreateArticleContent_wrapper__GmdMK\",\"title\":\"CreateArticleContent_title__sAoYg\",\"line\":\"CreateArticleContent_line__-+KEW\",\"form\":\"CreateArticleContent_form__TEoRx\",\"inputs\":\"CreateArticleContent_inputs__l3hJP\",\"select_img\":\"CreateArticleContent_select_img__fpfiS\",\"image\":\"CreateArticleContent_image__hFsha\",\"btn\":\"CreateArticleContent_btn__OGSKr\",\"select_icon\":\"CreateArticleContent_select_icon__ovLTX\"};","import { ChangeEvent, FC, useCallback, useMemo, useRef, useState } from 'react';\r\nimport SimpleMdeReact from 'react-simplemde-editor';\r\n\r\nimport imgIcon from 'assets/icons/img.png';\r\n\r\nimport { IArticle } from 'types/articles/articles';\r\nimport { formatDate } from 'helpers/formatDate';\r\n\r\nimport styles from './CreateArticleContent.module.css';\r\n\r\ninterface CreateArticleContentProps {\r\n    username: string;\r\n    articleImg: string;\r\n    isUploading: boolean;\r\n    avatarUrl: string | null;\r\n    uploaodImageInStorage: (file: File) => void;\r\n    addArticleToFirebase: (article: IArticle) => void;\r\n}\r\n\r\nconst CreateArticleContent: FC<CreateArticleContentProps> = ({\r\n    avatarUrl,\r\n    username,\r\n    articleImg,\r\n    isUploading,\r\n    uploaodImageInStorage,\r\n    addArticleToFirebase,\r\n}) => {\r\n    const [md, setMd] = useState<string>('');\r\n    const [article, setArticle] = useState({\r\n        name: '',\r\n        description: '',\r\n    });\r\n\r\n    const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            spellChecker: false,\r\n            autofocus: true,\r\n            minHeight: '400px',\r\n            placeholder: 'Введите текст статьи...',\r\n            status: false,\r\n            autosave: {\r\n                enabled: true,\r\n                delay: 1000,\r\n                uniqueId: 'article-content',\r\n            },\r\n        }),\r\n        []\r\n    );\r\n\r\n    const onChange = (\r\n        e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n    ) => {\r\n        const { name, value } = e.target;\r\n        setArticle((prev) => ({\r\n            ...prev,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const onChangeMd = useCallback((value: string) => {\r\n        setMd(value);\r\n    }, []);\r\n\r\n    const handleAddArticle = () => {\r\n        if (article && md) {\r\n            const newArticle: IArticle = {\r\n                id: '',\r\n                name: article.name,\r\n                description: article.description,\r\n                content: md,\r\n                createdAt: {\r\n                    date: new Date(),\r\n                    formatedDate: formatDate(new Date()),\r\n                },\r\n                user: {\r\n                    username,\r\n                    avatarUrl,\r\n                },\r\n                image: articleImg,\r\n            };\r\n            addArticleToFirebase(newArticle);\r\n            setArticle({\r\n                name: '',\r\n                description: '',\r\n            });\r\n            setMd('');\r\n        }\r\n    };\r\n\r\n    const handleChangeFile = async (e: ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.[0];\r\n        if (file) {\r\n            uploaodImageInStorage(file);\r\n        }\r\n    };\r\n\r\n    const handleInputClick = () => inputRef.current?.click();\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.title}>\r\n                <div className={styles.line}></div>\r\n                <h1>Создание статьи</h1>\r\n                <div className={styles.line}></div>\r\n            </div>\r\n            <div className={styles.form}>\r\n                <div className={styles.inputs}>\r\n                    <input\r\n                        value={article.name}\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Название статьи\"\r\n                    />\r\n                    <textarea\r\n                        value={article.description}\r\n                        name=\"description\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Краткое описание статьи...\"\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <div onClick={handleInputClick} className={styles.select_img}>\r\n                    {isUploading ? (\r\n                        <div>Upload...</div>\r\n                    ) : articleImg ? (\r\n                        <img\r\n                            className={styles.image}\r\n                            src={articleImg}\r\n                            alt=\"article_image\"\r\n                        />\r\n                    ) : (\r\n                        <>\r\n                            <img\r\n                                className={styles.select_icon}\r\n                                src={imgIcon}\r\n                                alt=\"img\"\r\n                            />\r\n                            <p>SELECT IMAGE</p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={inputRef}\r\n                    onChange={handleChangeFile}\r\n                    type=\"file\"\r\n                    hidden\r\n                />\r\n            </div>\r\n            <SimpleMdeReact\r\n                className={'editor'}\r\n                value={md}\r\n                onChange={onChangeMd}\r\n                options={options}\r\n            />\r\n            <button onClick={handleAddArticle} className={styles.btn}>\r\n                Сохранить\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateArticleContent;\r\n","import { FC, useState } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { addDoc, collection, getFirestore } from 'firebase/firestore';\r\nimport {\r\n    getDownloadURL,\r\n    getStorage,\r\n    ref,\r\n    uploadBytesResumable,\r\n} from 'firebase/storage';\r\n\r\nimport Loading from 'components/common/loading/Loading';\r\nimport CreateArticleContent from 'components/createArticleContent/CreateArticleContent';\r\n\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { IArticle } from 'types/articles/articles';\r\n\r\nconst CreateArticle: FC = () => {\r\n    const { isAuth, username, avatarUrl } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const db = getFirestore();\r\n    const articlesRef = collection(db, 'articles');\r\n    const storage = getStorage();\r\n\r\n    const [articleImg, setArticleImg] = useState<string>('');\r\n    const [isUploading, setIsUploading] = useState<boolean>(false);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n    const addArticleToFirebase = async (article: IArticle) => {\r\n        try {\r\n            setIsLoading(true);\r\n            const docRef = await addDoc(articlesRef, article);\r\n            navigate(`/article/${docRef.id}`);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const uploaodImageInStorage = async (file: File) => {\r\n        try {\r\n            const storageRef = ref(storage, `articles/${file.name}`);\r\n            const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n            uploadTask.on(\r\n                'state_changed',\r\n                (snapshot) => {\r\n                    setIsUploading(true);\r\n                },\r\n                (error) => {\r\n                    setIsUploading(false);\r\n                },\r\n                async () => {\r\n                    const downloadURL = await getDownloadURL(\r\n                        uploadTask.snapshot.ref\r\n                    );\r\n                    setArticleImg(downloadURL);\r\n                    setIsUploading(false);\r\n                }\r\n            );\r\n        } finally {\r\n            setIsUploading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isAuth ? (\r\n                isLoading ? (\r\n                    <Loading />\r\n                ) : (\r\n                    <CreateArticleContent\r\n                        username={username}\r\n                        avatarUrl={avatarUrl}\r\n                        articleImg={articleImg}\r\n                        isUploading={isUploading}\r\n                        uploaodImageInStorage={uploaodImageInStorage}\r\n                        addArticleToFirebase={addArticleToFirebase}\r\n                    />\r\n                )\r\n            ) : (\r\n                <Navigate to={'/signin'} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateArticle;\r\n"],"names":["formatDate","date","format","locale","ru","distanceDate","formatDistanceStrict","Date","_ref","avatarUrl","username","articleImg","isUploading","uploaodImageInStorage","addArticleToFirebase","md","setMd","useState","article","setArticle","name","description","inputRef","useRef","options","useMemo","spellChecker","autofocus","minHeight","placeholder","status","autosave","enabled","delay","uniqueId","onChange","e","value","target","prev","onChangeMd","useCallback","_jsxs","className","styles","children","_jsx","type","onClick","handleInputClick","_inputRef$current","current","click","src","alt","_Fragment","ref","async","_e$target$files","file","files","hidden","SimpleMdeReact","handleAddArticle","newArticle","id","content","createdAt","formatedDate","user","image","CreateArticle","isAuth","useAuth","navigate","useNavigate","db","getFirestore","articlesRef","collection","storage","getStorage","setArticleImg","setIsUploading","isLoading","setIsLoading","Loading","CreateArticleContent","storageRef","concat","uploadTask","uploadBytesResumable","on","snapshot","error","downloadURL","getDownloadURL","docRef","addDoc","Navigate","to"],"sourceRoot":""}