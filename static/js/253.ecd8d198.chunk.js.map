{"version":3,"file":"static/js/253.ecd8d198.chunk.js","mappings":"0GAIO,MAAMA,E,QAAoCC,E,qGCHjD,QAAiC,sCAAjC,EAAwF,sC,aCqBxF,MA2DA,EA3D8CC,IAAiC,IAAhC,SAAEC,EAAQ,aAAEC,GAAcF,EACrE,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAA0B,CACtDC,SAAU,GACVC,MAAO,GACPC,SAAU,KAGRC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BT,GAAaU,IAAY,IAClBA,EACH,CAACH,GAAOC,KACT,EAUP,OACIG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAsBC,UAClCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAsBC,SAAA,EAClCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,oBACJC,EAAAA,EAAAA,MAAA,QAAMC,SAXIV,IAClBA,EAAEW,iBAEF,MAAM,SAAEf,EAAQ,MAAEC,EAAK,SAAEC,GAAaL,EACtCF,EAASK,EAAUC,EAAOC,EAAS,EAOEU,SAAA,EACzBH,EAAAA,EAAAA,KAAA,SACIH,MAAOT,EAASG,SAChBgB,KAAK,OACLX,KAAK,WACLY,YAAY,yFACZC,SAAUf,KAEdM,EAAAA,EAAAA,KAAA,SACIH,MAAOT,EAASI,MAChBe,KAAK,QACLX,KAAK,QACLY,YAAY,4EACZC,SAAUf,KAEdM,EAAAA,EAAAA,KAAA,SACIH,MAAOT,EAASK,SAChBc,KAAK,WACLX,KAAK,WACLY,YAAY,kFACZC,SAAUf,KAEdM,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQJ,SAAC,qHAE1BC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,4FACmBH,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,UAASR,SAAC,iFAExChB,IAAgBa,EAAAA,EAAAA,KAAA,KAAAG,SAAIhB,QAEvB,E,iCC5Dd,MA2DA,EA3DmByB,KACf,MAAM,OAAEC,EAAM,GAAEC,IAAOC,EAAAA,EAAAA,KACjBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWnC,EAAAA,EAAAA,MAEVoC,EAAUC,IAAe9B,EAAAA,EAAAA,UAAiB,KAC1C+B,EAASC,IAAchC,EAAAA,EAAAA,WAAkB,GAwChD,OACIU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWE,SACrBkB,GACGrB,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,IACRV,GACAb,EAAAA,EAAAA,KAACwB,EAAAA,GAAQ,CAACC,SAAO,EAACd,GAAE,YAAAe,OAAcZ,MAElCd,EAAAA,EAAAA,KAAC2B,EAAa,CAACxC,aAAcgC,EAAUjC,SA7ClC0C,MACbrC,EACAC,EACAC,KAEA,MAAMoC,GAAOC,EAAAA,EAAAA,MAEb,IACIR,GAAW,GAEX,MAAM,KAAES,SAAeC,EAAAA,EAAAA,IACnBH,EACArC,EACAC,SAGEwC,EAAAA,EAAAA,IAAcF,EAAM,CACtBG,YAAa3C,IAGjB2B,GACIiB,EAAAA,EAAAA,IAAQ,CACJ3C,MAAOuC,EAAKvC,MACZsB,GAAIiB,EAAKK,IACTC,MAAON,EAAKO,aACZ/C,cAIRyB,EAAS,YAADU,OAAaK,EAAKK,KAC9B,CAAE,MAAOG,GACDA,aAAuBC,OACvBpB,EAAYmB,EAAYE,QAEhC,CAAC,QACGnB,GAAW,EACf,MAWM,C","sources":["hooks/useAppDispatch.ts","webpack://gym/./src/components/signUpContent/SignUpContent.module.css?d2a2","components/signUpContent/SignUpContent.tsx","pages/SignUp.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\nimport { AppDispatch } from 'types/redux/redux';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"signup_wrapper\":\"SignUpContent_signup_wrapper__qrKoz\",\"signup_content\":\"SignUpContent_signup_content__BGnmo\"};","import { FC, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IUser } from 'types/user/user';\r\n\r\nimport styles from './SignUpContent.module.css';\r\n\r\ninterface SignUpContentProps {\r\n    errorMessage: string;\r\n    onSignUp: (\r\n        username: IUser['username'],\r\n        email: IUser['email'],\r\n        password: string\r\n    ) => void;\r\n}\r\n\r\ninterface ISignUpFormData {\r\n    username: IUser['username'];\r\n    email: IUser['email'];\r\n    password: string;\r\n}\r\n\r\nconst SignUpContent: FC<SignUpContentProps> = ({ onSignUp, errorMessage }) => {\r\n    const [formData, setFormData] = useState<ISignUpFormData>({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        const { username, email, password } = formData;\r\n        onSignUp(username, email, password);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.signup_wrapper}>\r\n            <div className={styles.signup_content}>\r\n                <h1>Create account</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        value={formData.username}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Введите своё имя\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        value={formData.email}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Введите свой email\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        value={formData.password}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Введите пароль\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button type=\"submit\">Зарегистрироваться</button>\r\n                </form>\r\n                <p>\r\n                    Уже есть аккаунт? <Link to=\"/signin\">Войдите здесь</Link>\r\n                </p>\r\n                {errorMessage && <p>{errorMessage}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpContent;\r\n","import { FC, useState } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    getAuth,\r\n    updateProfile,\r\n} from 'firebase/auth';\r\n\r\nimport Loading from 'components/common/loading/Loading';\r\nimport SignUpContent from 'components/signUpContent/SignUpContent';\r\n\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { useAppDispatch } from 'hooks/useAppDispatch';\r\nimport { IUser } from 'types/user/user';\r\n\r\nimport { setUser } from '../redux/ProfileSlice';\r\n\r\nconst SignUp: FC = () => {\r\n    const { isAuth, id } = useAuth();\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [errorMes, setErrorMes] = useState<string>('');\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const onSignUp = async (\r\n        username: IUser['username'],\r\n        email: IUser['email'],\r\n        password: string\r\n    ) => {\r\n        const auth = getAuth();\r\n\r\n        try {\r\n            setLoading(true);\r\n\r\n            const { user } = await createUserWithEmailAndPassword(\r\n                auth,\r\n                email,\r\n                password\r\n            );\r\n\r\n            await updateProfile(user, {\r\n                displayName: username,\r\n            });\r\n\r\n            dispatch(\r\n                setUser({\r\n                    email: user.email,\r\n                    id: user.uid,\r\n                    token: user.refreshToken,\r\n                    username,\r\n                })\r\n            );\r\n\r\n            navigate(`/profile/${user.uid}`);\r\n        } catch (serverError: any) {\r\n            if (serverError instanceof Error) {\r\n                setErrorMes(serverError.message);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            {loading ? (\r\n                <Loading />\r\n            ) : isAuth ? (\r\n                <Navigate replace to={`/profile/${id}`} />\r\n            ) : (\r\n                <SignUpContent errorMessage={errorMes} onSignUp={onSignUp} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["useAppDispatch","useDispatch","_ref","onSignUp","errorMessage","formData","setFormData","useState","username","email","password","handleChange","e","name","value","target","prevFormData","_jsx","className","styles","children","_jsxs","onSubmit","preventDefault","type","placeholder","onChange","Link","to","SignUp","isAuth","id","useAuth","navigate","useNavigate","dispatch","errorMes","setErrorMes","loading","setLoading","Loading","Navigate","replace","concat","SignUpContent","async","auth","getAuth","user","createUserWithEmailAndPassword","updateProfile","displayName","setUser","uid","token","refreshToken","serverError","Error","message"],"sourceRoot":""}