{"version":3,"file":"static/js/840.a0f3a84c.chunk.js","mappings":"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","sources":["webpack://gym/./src/components/articleCards/articleCard/ArticleCard.module.css?a550","components/articleCards/articleCard/ArticleCard.tsx","webpack://gym/./src/components/articleCards/ArticleCards.module.css?fd06","components/articleCards/ArticleCards.tsx","helpers/formatDate.ts","webpack://gym/./src/components/userArticlesContent/UserArticlesContent.module.css?12f1","components/userArticlesContent/UserArticlesContent.tsx","pages/UserArticles.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"article\":\"ArticleCard_article__uAnHv\",\"distanceTime\":\"ArticleCard_distanceTime__UgtBn\",\"content\":\"ArticleCard_content__7LuWs\",\"article_img\":\"ArticleCard_article_img__T0VQZ\",\"article_text\":\"ArticleCard_article_text__ZE9uX\",\"author\":\"ArticleCard_author__eRbQv\",\"info\":\"ArticleCard_info__niVZ3\",\"date\":\"ArticleCard_date__v1dmE\"};","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Timestamp } from 'firebase/firestore';\r\n\r\nimport { IArticle } from 'types/articles/articles';\r\nimport { distanceDate } from 'helpers/formatDate';\r\n\r\nimport avaIcon from 'assets/icons/ava.png';\r\n\r\nimport styles from './ArticleCard.module.css';\r\n\r\ninterface ArticleCardProps {\r\n    article: IArticle;\r\n}\r\n\r\nconst ArticleCard: FC<ArticleCardProps> = ({ article }) => {\r\n    const distanceTime = distanceDate(\r\n        (article.createdAt.date as Timestamp).toDate()\r\n    );\r\n\r\n    return (\r\n        <Link to={`/article/${article.id}`}>\r\n            <div className={styles.article}>\r\n                {article.image && (\r\n                    <img\r\n                        className={styles.article_img}\r\n                        src={article.image}\r\n                        alt=\"article_img\"\r\n                    />\r\n                )}\r\n                <div className={styles.distanceTime}>{distanceTime} назад</div>\r\n                <div className={styles.content}>\r\n                    <h3>{article.name}</h3>\r\n                    <p className={styles.article_text}>{article.description}</p>\r\n                    <div className={styles.author}>\r\n                        <div className={styles.info}>\r\n                            <img\r\n                                src={\r\n                                    article.user.avatarUrl\r\n                                        ? article.user.avatarUrl\r\n                                        : avaIcon\r\n                                }\r\n                                alt=\"avatar\"\r\n                            />\r\n                            <h4>{article.user.username}</h4>\r\n                        </div>\r\n                        <p className={styles.date}>\r\n                            {article.createdAt.formatedDate}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default ArticleCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"articles\":\"ArticleCards_articles__5mPeJ\"};","import { FC } from 'react';\r\n\r\nimport { IArticle } from 'types/articles/articles';\r\n\r\nimport ArticleCard from './articleCard/ArticleCard';\r\n\r\nimport styles from './ArticleCards.module.css';\r\n\r\ninterface ArticleCardsProps {\r\n    articles: IArticle[];\r\n}\r\n\r\nconst ArticleCards: FC<ArticleCardsProps> = ({ articles }) => {\r\n    return (\r\n        <div className={styles.articles}>\r\n            {articles.map((article) => (\r\n                <ArticleCard key={article.id} article={article} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ArticleCards;\r\n","import { format, formatDistanceStrict } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\nexport const formatDate = (date: Date) => {\r\n    return format(date, 'd MMMM, yyyy', {\r\n        locale: ru,\r\n    });\r\n};\r\n\r\nexport const distanceDate = (date: Date) => {\r\n    return formatDistanceStrict(new Date(), date, {\r\n        locale: ru,\r\n    });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserArticlesContent_wrapper__SJarx\",\"btn_plus\":\"UserArticlesContent_btn_plus__uzM+X\",\"message\":\"UserArticlesContent_message__kLGKM\"};","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ArticleCards from 'components/articleCards/ArticleCards';\r\n\r\nimport plusIcon from 'assets/icons/plus.png';\r\nimport emptyIcon from 'assets/icons/empty.png';\r\nimport { IArticle } from 'types/articles/articles';\r\n\r\nimport styles from './UserArticlesContent.module.css';\r\n\r\ninterface UserArticlesProps {\r\n    articles: IArticle[];\r\n}\r\n\r\nconst UserArticlesContent: FC<UserArticlesProps> = ({ articles }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Link to={'/create'}>\r\n                <button className={styles.btn_plus}>\r\n                    <img src={plusIcon} alt=\"plus\" />\r\n                    Добавить статью\r\n                </button>\r\n            </Link>\r\n            {articles.length ? (\r\n                <ArticleCards articles={articles} />\r\n            ) : (\r\n                <p className={styles.message}>\r\n                    Статьи еще не были добавлены\r\n                    <img src={emptyIcon} alt=\"empty\" />\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserArticlesContent;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport {\r\n    collection,\r\n    getDocs,\r\n    getFirestore,\r\n    query,\r\n    where,\r\n} from 'firebase/firestore';\r\n\r\nimport Loading from 'components/common/loading/Loading';\r\nimport UserArticlesContent from 'components/userArticlesContent/UserArticlesContent';\r\n\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { IArticle } from 'types/articles/articles';\r\n\r\nconst UserArticles: FC = () => {\r\n    const { username, avatarUrl } = useAuth();\r\n    const db = getFirestore();\r\n    const articlesRef = collection(db, 'articles');\r\n\r\n    const [articles, setArticles] = useState<IArticle[]>([]);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const getArticles = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n\r\n                const q = query(\r\n                    articlesRef,\r\n                    where('user.username', '==', username)\r\n                );\r\n                const dataArticles = await getDocs(q);\r\n\r\n                const filteredArticles = dataArticles.docs.map((articleDoc) => {\r\n                    const data = articleDoc.data();\r\n\r\n                    const {\r\n                        name,\r\n                        description,\r\n                        content,\r\n                        createdAt,\r\n                        user,\r\n                        image,\r\n                    } = data;\r\n                    return {\r\n                        id: articleDoc.id,\r\n                        name: name,\r\n                        description: description,\r\n                        content: content,\r\n                        createdAt: {\r\n                            date: createdAt.date,\r\n                            formatedDate: createdAt.formatedDate,\r\n                        },\r\n                        user: {\r\n                            username: user.username,\r\n                            avatarUrl: user.avatarUrl,\r\n                        },\r\n                        image: image,\r\n                    };\r\n                });\r\n\r\n                setArticles(filteredArticles);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        getArticles();\r\n    }, [avatarUrl]);\r\n\r\n    return (\r\n        <div>\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <UserArticlesContent articles={articles} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserArticles;\r\n"],"names":["_ref","article","distanceTime","distanceDate","createdAt","date","toDate","_jsx","Link","to","concat","id","children","_jsxs","className","styles","image","src","alt","name","description","user","avatarUrl","avaIcon","username","formatedDate","articles","map","ArticleCard","formatDate","format","locale","ru","formatDistanceStrict","Date","plusIcon","length","ArticleCards","emptyIcon","UserArticles","useAuth","db","getFirestore","articlesRef","collection","setArticles","useState","isLoading","setIsLoading","useEffect","async","q","query","where","filteredArticles","getDocs","docs","articleDoc","data","content","getArticles","Loading","UserArticlesContent"],"sourceRoot":""}